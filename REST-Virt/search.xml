<?xml version="1.0" encoding="UTF-8"?>
<con:restMockAction name="search" method="GET" resourcePath="/search" id="dfd3e5e3-9116-4010-909e-9514e7f60b46" xmlns:con="http://eviware.com/soapui/config">
  <con:settings>
    <con:setting id="92956b11-db13-4f2a-90f3-f11bc6a1950bfileName">search</con:setting>
    <con:setting id="dfd3e5e3-9116-4010-909e-9514e7f60b46fileName">search</con:setting>
  </con:settings>
  <con:defaultResponse>Unknown Response</con:defaultResponse>
  <con:dispatchStyle>PARAMETER</con:dispatchStyle>
  <con:dispatchConfig/>
  <con:dispatchPath>//import java.net.URLDecoder;
//def queryString = mockRequest.getRequest().getQueryString()
//
//String[] fields = queryString.split("&amp;");
//String[] kv;
//
//HashMap&lt;String, String> params = new HashMap&lt;String, String>()
//for (int i = 0; i &lt; fields.length; ++i){
//    kv = fields[i].split("=");
//    if (2 == kv.length)
//     params.put(kv[0], kv[1]); 
//}
//
//def sessionid = params.get("sessionid")
//
//// check
//if( !context.hasProperty( sessionid ))
// return "Invalid Session Id Fault"
//
//def searchstring = URLDecoder.decode(params.get("searchstring"), "UTF-8")
//
//if (searchstring == "all") 
// return "WildCard Response"
//else if (searchstring == "Item 1") 
// return "Item 1 Response"
//else if (searchstring == "Item 2") 
// return "Item 2 Response"
//else if (searchstring == "Item 3") 
// return "Item 3 Response"
//else if (searchstring == "Item 4") 
// return "Item 3 Response"
//else if (searchstring == "Item 5") 
// return "Item 5 Response"
//else
//return "Unknown Response" 
//	
//
//
//return "Search Response"</con:dispatchPath>
  <con:dispatchXPath/>
  <con:parameterDispatcherRuleContainer>
    <con:ParameterDispatcherRule>
      <con:ruleName>no sessionID</con:ruleName>
      <con:parameterDispatcherCondition>
        <con:parameterType>QUERY</con:parameterType>
        <con:parameterOperationType>EQUALS</con:parameterOperationType>
        <con:parameterName>sessionid</con:parameterName>
        <con:parameterValue/>
      </con:parameterDispatcherCondition>
      <con:responseName>Invalid Session Id Fault</con:responseName>
    </con:ParameterDispatcherRule>
    <con:ParameterDispatcherRule>
      <con:ruleName>all</con:ruleName>
      <con:parameterDispatcherCondition>
        <con:parameterType>QUERY</con:parameterType>
        <con:parameterOperationType>EXISTS</con:parameterOperationType>
        <con:parameterName>sessionid</con:parameterName>
        <con:parameterValue/>
      </con:parameterDispatcherCondition>
      <con:parameterDispatcherCondition>
        <con:parameterType>QUERY</con:parameterType>
        <con:parameterOperationType>EQUALS</con:parameterOperationType>
        <con:parameterName>searchstring</con:parameterName>
        <con:parameterValue>all</con:parameterValue>
      </con:parameterDispatcherCondition>
      <con:responseName>WildCard Response</con:responseName>
    </con:ParameterDispatcherRule>
    <con:ParameterDispatcherRule>
      <con:ruleName>item 1</con:ruleName>
      <con:parameterDispatcherCondition>
        <con:parameterType>QUERY</con:parameterType>
        <con:parameterOperationType>EXISTS</con:parameterOperationType>
        <con:parameterName>sessionid</con:parameterName>
        <con:parameterValue/>
      </con:parameterDispatcherCondition>
      <con:parameterDispatcherCondition>
        <con:parameterType>QUERY</con:parameterType>
        <con:parameterOperationType>EQUALS</con:parameterOperationType>
        <con:parameterName>searchstring</con:parameterName>
        <con:parameterValue>Item 1</con:parameterValue>
      </con:parameterDispatcherCondition>
      <con:responseName>Item 1 Response</con:responseName>
    </con:ParameterDispatcherRule>
    <con:ParameterDispatcherRule>
      <con:ruleName>item 2</con:ruleName>
      <con:parameterDispatcherCondition>
        <con:parameterType>QUERY</con:parameterType>
        <con:parameterOperationType>EXISTS</con:parameterOperationType>
        <con:parameterName>sessionid</con:parameterName>
        <con:parameterValue/>
      </con:parameterDispatcherCondition>
      <con:parameterDispatcherCondition>
        <con:parameterType>QUERY</con:parameterType>
        <con:parameterOperationType>EQUALS</con:parameterOperationType>
        <con:parameterName>searchstring</con:parameterName>
        <con:parameterValue>Item 2</con:parameterValue>
      </con:parameterDispatcherCondition>
      <con:responseName>Item 2 Response</con:responseName>
    </con:ParameterDispatcherRule>
    <con:ParameterDispatcherRule>
      <con:ruleName>item 3</con:ruleName>
      <con:parameterDispatcherCondition>
        <con:parameterType>QUERY</con:parameterType>
        <con:parameterOperationType>EXISTS</con:parameterOperationType>
        <con:parameterName>sessionid</con:parameterName>
        <con:parameterValue/>
      </con:parameterDispatcherCondition>
      <con:parameterDispatcherCondition>
        <con:parameterType>QUERY</con:parameterType>
        <con:parameterOperationType>EQUALS</con:parameterOperationType>
        <con:parameterName>searchstring</con:parameterName>
        <con:parameterValue>Item 3</con:parameterValue>
      </con:parameterDispatcherCondition>
      <con:responseName>Item 3 Response</con:responseName>
    </con:ParameterDispatcherRule>
    <con:ParameterDispatcherRule>
      <con:ruleName>item 4</con:ruleName>
      <con:parameterDispatcherCondition>
        <con:parameterType>QUERY</con:parameterType>
        <con:parameterOperationType>EXISTS</con:parameterOperationType>
        <con:parameterName>sessionid</con:parameterName>
        <con:parameterValue/>
      </con:parameterDispatcherCondition>
      <con:parameterDispatcherCondition>
        <con:parameterType>QUERY</con:parameterType>
        <con:parameterOperationType>EQUALS</con:parameterOperationType>
        <con:parameterName>searchstring</con:parameterName>
        <con:parameterValue>Item 4</con:parameterValue>
      </con:parameterDispatcherCondition>
      <con:responseName>Item 4 Response</con:responseName>
    </con:ParameterDispatcherRule>
    <con:ParameterDispatcherRule>
      <con:ruleName>item 5</con:ruleName>
      <con:parameterDispatcherCondition>
        <con:parameterType>QUERY</con:parameterType>
        <con:parameterOperationType>EXISTS</con:parameterOperationType>
        <con:parameterName>sessionid</con:parameterName>
        <con:parameterValue/>
      </con:parameterDispatcherCondition>
      <con:parameterDispatcherCondition>
        <con:parameterType>QUERY</con:parameterType>
        <con:parameterOperationType>EQUALS</con:parameterOperationType>
        <con:parameterName>searchstring</con:parameterName>
        <con:parameterValue>Item 5</con:parameterValue>
      </con:parameterDispatcherCondition>
      <con:responseName>Item 5 Response</con:responseName>
    </con:ParameterDispatcherRule>
  </con:parameterDispatcherRuleContainer>
  <con:routeScript/>
  <con:response name="Search Response" id="095b5840-b347-4fd9-814e-d818d291e7ca" httpResponseStatus="200" mediaType="application/json" dataSource="">
    <con:settings/>
    <con:responseContent>{
  "result": {
    "item": [
      {
        "id": "1",
        "description": "One handy protocol droid.",
        "price": "1"
      },
      {
        "id": "2",
        "description": "Item nr 2",
        "price": "2"
      },
      {
        "id": "3",
        "description": "Item nr 3",
        "price": "3"
      },
      {
        "id": "4",
        "description": "${item4description}",
        "price": "4"
      },
      {
        "id": "5",
        "description": "Item nr 5",
        "price": "5"
      }
    ]
  }
}</con:responseContent>
  </con:response>
  <con:response name="Invalid Session Id Fault" id="3116ba96-1165-47d5-94ff-f17b1bba36c6" httpResponseStatus="200" dataSource="" mediaType="application/json">
    <con:settings/>
    <con:responseContent>{"Failed" : "Invalid Session Id"}</con:responseContent>
  </con:response>
  <con:response name="Item 1 Response" id="75d72ca5-d4a8-436c-947c-607921b56036" httpResponseStatus="200" mediaType="application/json" dataSource="" compressedBodyContent="aced00057372002f636f6d2e657669776172652e736f617075692e696d706c2e737570706f72742e436f6d7072657373656456616c7565000b8b02c748eeab0200025a000a636f6d707265737365645b0004646174617400025b4278700070">
    <con:settings/>
    <con:responseContent>{
  "result": {
    "item": {
      "id": "Item 1",
      "description": "One handy protocol droid. This droid is fluent in over six million forms of communication and has a lovely golden color. Built by an enthusiast. Mindwiped only once. Can be carried on your back.",
      "price": "1"
    }
  }
}</con:responseContent>
  </con:response>
  <con:response name="Item 2 Response" id="bf566674-1aec-4bdc-a449-ea4b8c51c93f" httpResponseStatus="200" mediaType="application/json" dataSource="" compressedBodyContent="aced00057372002f636f6d2e657669776172652e736f617075692e696d706c2e737570706f72742e436f6d7072657373656456616c7565000b8b02c748eeab0200025a000a636f6d707265737365645b0004646174617400025b4278700070">
    <con:settings/>
    <con:responseContent>{
  "result": {
    "item": {
      "id": "Item 2",
      "description": "Box of chocolate with several popular items. Covered in Glucose. Recommended safety distance when eating Spring Surprise, 10 feet.",
      "price": "1.99"
    }
  }
}</con:responseContent>
  </con:response>
  <con:response name="Item 3 Response" id="cb704286-eeb6-43d1-8008-3a74124efa3d" httpResponseStatus="200" mediaType="application/json" dataSource="" compressedBodyContent="aced00057372002f636f6d2e657669776172652e736f617075692e696d706c2e737570706f72742e436f6d7072657373656456616c7565000b8b02c748eeab0200025a000a636f6d707265737365645b0004646174617400025b4278700070">
    <con:settings/>
    <con:responseContent>{
  "result": {
    "item": {
      "id": "Item 3",
      "description": "One towel. Massively useful thing. Impress the strags with this amazing cloth!",
      "price": "2.99"
    }
  }
}</con:responseContent>
  </con:response>
  <con:response name="Item 4 Response" id="e9637bfe-9963-4bf4-8543-50333309fb28" httpResponseStatus="200" mediaType="application/json" dataSource="" compressedBodyContent="aced00057372002f636f6d2e657669776172652e736f617075692e696d706c2e737570706f72742e436f6d7072657373656456616c7565000b8b02c748eeab0200025a000a636f6d707265737365645b0004646174617400025b4278700070">
    <con:settings/>
    <con:responseContent>{
  "result": {
    "item": {
      "id": "Item 4",
      "description": "Ono-Sendai 7. The newest cowboy tech from Hosaka. Break the ICE with this conversation piece.",
      "price": "4.99"
    }
  }
}</con:responseContent>
  </con:response>
  <con:response name="Item 5 Response" id="6aab9362-d00a-485d-8e5b-bfc6f6e1c0b3" httpResponseStatus="200" mediaType="application/json" dataSource="" compressedBodyContent="aced00057372002f636f6d2e657669776172652e736f617075692e696d706c2e737570706f72742e436f6d7072657373656456616c7565000b8b02c748eeab0200025a000a636f6d707265737365645b0004646174617400025b4278700070">
    <con:settings/>
    <con:responseContent>{
  "result": {
    "item": {
      "id": "Item 5",
      "description": "Ready! API. All your needs for API readiness",
      "price": "599"
    }
  }
}</con:responseContent>
  </con:response>
  <con:response name="Search Fault Response" id="26746ead-de2a-4b8f-9efd-718d60bf8a1d" httpResponseStatus="200" mediaType="application/json" dataSource="">
    <con:settings/>
    <con:responseContent>{"No Result" : "The search returned no items"}</con:responseContent>
  </con:response>
  <con:response name="Unknown Response" id="b1d5cb46-c0d5-4b67-8bc1-ce9fe4ec2a50" httpResponseStatus="200" mediaType="application/json" dataSource="">
    <con:settings/>
    <con:responseContent>{ "Client" : "Unknown Search String" }</con:responseContent>
  </con:response>
  <con:response name="WildCard Response" id="6b85e28f-a5b9-47f3-baa2-ccf7118b413a" httpResponseStatus="200" mediaType="application/json" dataSource="">
    <con:settings/>
    <con:responseContent>{
  "result": {
    "item": [
      {
        "id": "1",
        "description": "One handy protocol droid.",
        "price": "1"
      },
      {
        "id": "2",
        "description": "Item nr 2",
        "price": "2"
      },
      {
        "id": "3",
        "description": "Item nr 3",
        "price": "3"
      },
      {
        "id": "4",
        "description": "${item4description}",
        "price": "4"
      },
      {
        "id": "5",
        "description": "Item nr 5",
        "price": "5"
      }
    ]
  }
}</con:responseContent>
  </con:response>
</con:restMockAction>
